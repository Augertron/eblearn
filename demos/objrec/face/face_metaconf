################################################################################
# META_TRAINER CONFIGURATION
# Note: variables starting with "meta_" are reserved for meta configuration

# required variables
meta_command = objrec_train

# optional variables
meta_name = face
meta_max_cpus = 8
#meta_output_dir = /home/sermanet/texieradata/face/out
meta_output_dir = /home/sermanet/humairadata/face/out
meta_email = me@mail.com
meta_email_period = 1 # send an email with plots after every n iterations
meta_gnuplot_params = set grid ytics;set ytics 5;set mytics 5;set grid mytics;

################################################################################
# LOCAL PROGRAM CONFIGURATION

# directories ##################################################################
root = /home/sermanet/humairadata/face/ds
#root = /home/sermanet/texieradata/face/ds
#root = /data/face/ds
root1 = /home/sermanet/eblearn/demos/objrec/face/trained/
#root2 = /data/face

# network ######################################################################
net_type = cscsc
net_ih = 32 # 48 # 64
net_iw = ${net_ih}
net_c1h = 5
net_c1w = 5
net_s1h = 2
net_s1w = 2
net_c2h = 5
net_c2w = 5
net_s2h = 2
net_s2w = 2
net_full = 100
absnorm = 1
color = 0 # 1
mirror = 1

# training #####################################################################
ds = 1
val_size = 500
dsname = all_${resize}${net_ih}x${net_iw}_ker${normalization_size}_bg${fp_name}
train = ${dsname}_train_${val_size}_${ds}
val = ${dsname}_val_${val_size}_${ds}
eta = .00001 .000005 .000001 .0000005
iterations = 50

# retraining ###################################################################
retrain = 1
fp_name = _${job_name}
retrain_weights = ${root1}/${job_name}_net000.mat

# preprocessing ################################################################
resize = mean # bilinear
normalization_size = 7 # 9

# detection ####################################################################
weights = ${root2}/${job_name}_net000.mat
classes = ${root2}/${job_name}_classes.mat
threshold = .99
gain = 1
input_height = -1 # use -1 to use original size
input_width = -1 # use -1 to use original size

# output saving and display
save_detections = 1
# save each classified frame and make a video out of it
save_video = 1
save_video_fps = 5
display = 1
# only show classified input
minimal_display = 1
# sleep in milliseconds after displaying
display_sleep = 0
ninternals = 1

# camera options: opencv shmem video directory
camera = directory

# limit of input video duration in seconds, 0 means no limit
input_video_max_duration = 0

# step between input frames in seconds, 0 means no step
input_video_sstep = 0
