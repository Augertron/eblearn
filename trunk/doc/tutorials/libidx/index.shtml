<html>
  <head>
    <title>EBLearn: libidx tutorial</title>
    <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
    <link rel="stylesheet" href="../../web/main.css" type="text/css" 
	  media="screen">
    <link rel="stylesheet" href="../../web/index_004.css" type="text/css" 
	  media="screen">
    <link rel="stylesheet" type="text/css" href="../../web/styles.css" 
	  media="all">
    <link rel="shortcut icon" href="../../web/logo2.ico">
  </head>
  <body>
    <!--#include virtual="../../nav.html" --> 
    <div id="globalWrapper">
      <h1 id="firstHeading" class="firstHeading"><b>libidx tutorial:</b> simple matrix manipulations in C++</h1>
      <h3 id="siteSub">By <a href="http://sermanet.free.fr">Pierre Sermanet</a> and <a href="http://yann.lecun.com/">Yann LeCun</a> (New York University)</h3><br><br>
      
      <table class="toccolours" style="margin: 0pt 0pt 1em 1em; padding: 0px; width: 170px;" align="left">
	<tr>
	  <h2>matrix descriptors</h2>
	  <h2>basic matrix operations</h2>
	  <h2>gui</h2>
	  <h2>debugging</h2>
	  Using gdb, one can inspect variables and call most functions
	  in an interative manner. For example, call ./debug.sh at the
	  root of the eblearn directory. This will start a debugging
	  environment in emacs and gdb. Gdb is configured not to stop
	  all threads when a tread stops (see .gdbinit), so you need
	  to switch to the thread that stopped, e.g.:
	  thread 2
	  
	  If you want to inspect an idx 'a', you can call:
	  p a.spec.ndim
	  p *a.spec.dim@3
	  
	  If you want to display an idx, call draw_matrix, e.g.:
	  call ebl::draw_matrix_float(a, 0, 0, 1, 1, 0, 255)

	  If you need to manipulate the idx, for example if you want
	  to display only 1 layer of the RGB image 'a', you can use
	  global debug idx variables:
	  set ebl::gdb_idx_float1 = a.select(2, 0)
	  call ebl::draw_matrix_float(ebl::gdb_idx_float1, 0, 0, 1, 1, 0,
	  255)

	  Note: gdb does not accept calls to template functions, one
	  needs to declare instantiations in the code first
	  (e.g. draw_matrix_float instead of draw_matrix<float>).
	  Some of those instantiations are available in the
	  libeblearntools, link with this library to use them. 
	  
	  
<div id="vc_markup"><pre>
    <a id="l_1"></a><span class="hl line">      </span><span class="hl dir">#include</span> <span class="hl dstr">&quot;libeblearn.h&quot;</span><span class="hl dir"></span>
</pre></div>
</td></tr></table>
	</tr>
	</table>
  </body>
</html>
