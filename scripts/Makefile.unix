ifndef (prj)
prj := all
endif

INCLUDE_INSTALL=/usr/include/eblearn/
LIB_INSTALL=/usr/lib/
BIN_INSTALL=/usr/bin

# detect MAC OS
OSUPPER = $(shell uname -s 2>/dev/null | tr [:lower:] [:upper:])
OSLOWER = $(shell uname -s 2>/dev/null | tr [:upper:] [:lower:])
# 'linux' is output for Linux system, 'darwin' for OS X
DARWIN = $(strip $(findstring DARWIN, $(OSUPPER)))
ifneq ($(DARWIN),)
	LIB_EXT=dylib
else
	LIB_EXT=so
endif

all: libs

release:
	@echo __________________________________________________________________
	@echo
	@echo "Compiling ${prj} project(s) in release mode..."
	@echo "Use 'make release prj=idxgui' for example to compile a specific project."
	@echo __________________________________________________________________
	cd build/Release && cmake -DCMAKE_BUILD_TYPE=Release ../.. && make ${prj} && cd ../..

libs:
	@echo ${LIB_EXT}
	@echo ${ARCH2}
	@echo __________________________________________________________________
	@echo
	@echo "Compiling libraries in release mode..."
	@echo __________________________________________________________________
	cd build/Release && cmake -DCMAKE_BUILD_TYPE=Release ../.. && make idx eblearn idxgui eblearngui eblearntools && cd ../..
	
tools:
	@echo __________________________________________________________________
	@echo
	@echo "Compiling tools in release mode..."
	@echo __________________________________________________________________
	cd build/Release && cmake -DCMAKE_BUILD_TYPE=Release ../.. && make dscompiler dsdisplay dssplit dsmerge meta_trainer meta_plot && cd ../..
	
# demo:
# 	@echo __________________________________________________________________
# 	@echo
# 	@echo "Compiling demos in release mode..."
# 	@echo __________________________________________________________________
# 	cd build/Demos && cmake -DCMAKE_BUILD_TYPE=Release ../../demos/ && make && cd ../..

test:
	@echo __________________________________________________________________
	@echo
	@echo "Compiling tester in release mode and running it..."
	@echo __________________________________________________________________
	cd build/Release && cmake -DCMAKE_BUILD_TYPE=Release ../.. && make tester && cd ../.. && ./bin/tester

debug:
	@echo __________________________________________________________________
	@echo
	@echo "Compiling ${prj} project(s) in debug mode..."
	@echo "Use 'make debug prj=idxgui' for example to compile a specific project."
	@echo __________________________________________________________________
	cd build/Debug && cmake -DCMAKE_BUILD_TYPE=Debug ../.. && make ${prj} && cd ../..

clean:
	rm -rf build/Debug/*
	rm -rf build/Release/*
	rm -rf bin/*

install:
	mkdir -p $(INCLUDE_INSTALL)
	cp -f libidx/include/* $(INCLUDE_INSTALL)
	cp -f libeblearn/include/* $(INCLUDE_INSTALL)
	cp -f libidxgui/include/* $(INCLUDE_INSTALL)
	cp -f libeblearngui/include/* $(INCLUDE_INSTALL)
	cp -f libeblearntools/include/* $(INCLUDE_INSTALL)
	cp -f bin/libidx.$(LIB_EXT) $(LIB_INSTALL)
	cp -f bin/libeblearn.$(LIB_EXT) $(LIB_INSTALL)
	cp -f bin/libeblearntools.$(LIB_EXT) $(LIB_INSTALL)
	cp -f bin/libidxgui.$(LIB_EXT) $(LIB_INSTALL)
	cp -f bin/libeblearngui.$(LIB_EXT) $(LIB_INSTALL)
	cp -f bin/matdisplay $(BIN_INSTALL)
	cp -f bin/dsdisplay $(BIN_INSTALL)
	cp -f bin/dscompiler $(BIN_INSTALL)
	cp -f bin/dsmerge $(BIN_INSTALL)
	cp -f bin/dssplit $(BIN_INSTALL)
